import Head from 'next/head'
import Cookies from 'js-cookie'
import { useContext, useEffect, useState } from 'react'
import { v4 as uuidv4 } from 'uuid'
import Image from 'next/image'
import { SessionContext } from '@/context/SessionProvider'
import { useRouter } from 'next/router'

export default function Home () {
  const [cart, setCart] = useState([])
  const { session } = useContext(SessionContext)
  const router = useRouter()

  useEffect(() => {
    const cart = Cookies.get('cart') ? JSON.parse(Cookies.get('cart')) : []
    setCart(cart)
  }, [])

  const handleBuyClick = () => {
    if (!session) {
      router.push('/login')
      return
    }
    router.push('/payload')
  }

  return (
    <>
      <Head>
        <title>Carrito</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex flex-col items-center py-11 gap-5'>
        {cart[0]
          ? (
            <>
              {cart.map((p, i) => <ProductCard p={p} key={uuidv4()} i={i} setCart={setCart} />)}
              <div className='w-6/12 justify-end flex'>
                <button onClick={() => handleBuyClick()}>Comprar</button>
              </div>
            </>
            )
          : (
            <>
              Aun no has hecho ninguna compra
            </>
            )}
      </main>
    </>
  )
}

const ProductCard = ({ p, setCart, i }) => {
  const handleDeleteProduct = () => {
    setCart((prev) => {
      const copyPrev = [...prev]
      const filter = copyPrev.filter((_, _i) => _i !== i)
      Cookies.set('cart', JSON.stringify(filter))
      return filter
    })
  }

  return (
    <article className='w-6/12 h-full flex bg-[#fff] shadow-md overflow-auto'>
      <Image alt={p.descripcion} src={p.imagen} width={300} height={300} />
      <div className='px-2 py-2 flex w-full h-6/6'>
        <div className='flex flex-col w-4/12 h-6/6'>
          <label>Precio:</label>
          <span>{p.precio}</span>
          <label>Nombre:</label>
          <span>{p.nombre}</span>
        </div>
        <div className='flex justify-between w-full h-6/6'>
          <div className='flex flex-col'>
            <label>Descripcion:</label>
            <span>{p.descripcion}</span>
          </div>
          <div className='flex items-end'>
            <button className='' onClick={() => handleDeleteProduct()}>Borrar</button>
          </div>
        </div>
      </div>
    </article>
  )
}
